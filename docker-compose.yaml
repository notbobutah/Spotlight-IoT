version: "3"
services:
  spotlight-jpa-be:
    container_name: spotlight-jpa-be
    image: ghcr.io/notbobutah/spotlight-iot-jpa:latest
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://spotlight-db:5432/postgres
      SPRING_DRIVER_CLASS_NAME: org.postgresql.Driver
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: spotlight
      KAFKA_BROKER: PLAINTEXT://kafka1:19092
      server.port: 6060
    links:
      - "db:database"
    ports:
      - "6060:6060"
    command: ["java", "-jar", "/app/spotlight-jpa-0.0.1-SNAPSHOT.jar"]

  spotlight-be:
    container_name: spotlight-be  # Container name
    build: ./be
    image: spotlight-be:latest
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: spotlight
      POSTGRES_DB: postgres
      POSTGRES_SERVER: db
      POSTGRES_PORT: 5432
      DATABASE_URL: postgres://postgres:spotlight@spotlight-db:5432/postgres
      NODE_ENV: test
      PORT: 8080
    ports:
      - "8080:8080"
    command: npm start
    volumes:
      - .:/app/
      - /app/node_modules

  spotlight-fe: 
      container_name: spotlight-fe  # Container name
      build: ./fe
      image: spotlight-fe:latest
      ports: 
        - '80:3000' # Port mapping
      command: > 
        bash -c "npm start"
      depends_on:
        - spotlight-be
      environment:
        SPOTLIGHT-BE: spotlight-spotlight-be_1

  db:
    container_name: spotlight-db  # Container name
    build: ./database
    image: spotlight-db:latest
    environment:
      - POSTGRES_PASSWORD=spotlight
      - POSTGRES_DB=postgres
      - POSTGRES_USER=postgres
      - APP_DB_USER=thingsboard
      - APP_DB_PASS=spotlight
      - APP_DB_NAME=thingsboard 
    networks:
      default:
        aliases:
          - database
          - spotlight-db
          - postgres
    healthcheck:
      test: [ "CMD", "pg_isready", "-q", "-d", "postgres", "-U", "postgres" ]
      timeout: 45s
      interval: 10s
      retries: 10
    ports:
      - "5432:5432"
    volumes:
      - db-data:/var/lib/postgresql/data      
      - ./thingsboard:/docker-entrypoint-initdb.d/

  tb:
    image: thingsboard/tb
    container_name: thingsboard
    ports:
      - "9090:9090"
      - "1883:1883"
      - "7070:7070"
      # - "5432:5432"
      - "5683-5683:5683-5683/udp"
    links:
      - "db:database"
    depends_on:
      - db
    volumes:
      - tb-data:/home/rob/.mytb-data/tb-data      
      - tb-logs:/home/rob/.mytb-data/tb-logs         
    environment:
      POSTGRES_USER: thingsboard
      POSTGRES_PASSWORD: spotlight
      POSTGRES_DB: thingsboard
      SPRING_DATASOURCE_URL: jdbc:postgresql://spotlight-db:5432/thingsboard
      SPRING_DRIVER_CLASS_NAME: org.postgresql.Driver
      SPRING_DATASOURCE_USERNAME: thingsboard
      SPRING_DATASOURCE_PASSWORD: spotlight

  pi:
    image: ghcr.io/notbobutah/spotlight-iot-pi:latest
    container_name: spotlight-pi
    profiles:
      - pi
    ports:
      - "90:90"
    environment:
      - APP_DB_USER=thingsboard
      - APP_DB_PASS=spotlight
      - APP_DB_NAME=thingsboard 
  zoo1:
    image: confluentinc/cp-zookeeper:7.3.2
    hostname: zoo1
    container_name: zoo1 
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_SERVER_ID: 1
      ZOOKEEPER_SERVERS: zoo1:2888:3888

  kafka1:
    image: confluentinc/cp-kafka:7.3.2
    hostname: kafka1
    container_name: kafka1
    networks:
      default:
        aliases:
          - broker1
    ports:
      - "9092:9092"
      - "29092:29092"
      - "9999:9999"
      - "9001:9001"
    environment:
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka1:19092,EXTERNAL://${DOCKER_HOST_IP:-127.0.0.1}:9092,DOCKER://host.docker.internal:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT,DOCKER:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_ZOOKEEPER_CONNECT: "zoo1:2181"
      KAFKA_BROKER_ID: 1
      KAFKA_LOG4J_LOGGERS: "kafka.controller=INFO,kafka.producer.async.DefaultEventHandler=INFO,state.change.logger=INFO"
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_JMX_PORT: 9001
      KAFKA_JMX_HOSTNAME: kafka1
      KAFKA_AUTHORIZER_CLASS_NAME: kafka.security.authorizer.AclAuthorizer
      KAFKA_ALLOW_EVERYONE_IF_NO_ACL_FOUND: "true"
    depends_on:
      - zoo1

  kafka-schema-registry:
    image: confluentinc/cp-schema-registry:7.3.2
    hostname: kafka-schema-registry
    container_name: kafka-schema-registry
    ports:
      - "8081:8081"
    environment:
      SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: PLAINTEXT://kafka1:19092
      SCHEMA_REGISTRY_HOST_NAME: kafka-schema-registry
      SCHEMA_REGISTRY_LISTENERS: http://0.0.0.0:8081
    depends_on:
      - zoo1
      - kafka1

  
  kafka-rest-proxy:
    image: confluentinc/cp-kafka-rest:7.3.2
    hostname: kafka-rest-proxy
    container_name: kafka-rest-proxy
    ports:
      - "8082:8082"
    environment:
      # KAFKA_REST_ZOOKEEPER_JMX_PORT: 9093CONNECT: zoo1:2181
      KAFKA_REST_LISTENERS: http://0.0.0.0:8082/
      KAFKA_REST_SCHEMA_REGISTRY_URL: http://kafka-schema-registry:8081/
      KAFKA_REST_HOST_NAME: kafka-rest-proxy
      KAFKA_REST_BOOTSTRAP_SERVERS: PLAINTEXT://kafka1:19092
    depends_on:
      - zoo1
      - kafka1
      - kafka-schema-registry

  lenses:
    image: lensesio/lenses
    environment:
      LENSES_PORT: 9991
      EULA: "https://licenses.lenses.io/download/lensesdl?id=901d0ad6-0e29-11ee-8f1e-42010af01003"  
      # # Users are managed within Lenses. Here you can change the superuser username:
      # LENSES_SECURITY_USER: admin
      # # Users are managed within Lenses. Here you can change the superuser password:
      # LENSES_SECURITY_PASSWORD: admin
    ports:
      - 9991:9991
      - 9102:9102
    depends_on:
      - zoo1
      - kafka1
      - kafka-schema-registry      
  
  kafka-ui:
    container_name: kafka-ui
    image: provectuslabs/kafka-ui:latest
    ports:
      - 8083:8083
    depends_on:
      - zoo1
      - kafka1
      - kafka-schema-registry
    links:
      - "kafka1:kafka1"
    environment:
      SERVER_PORT: 8083
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka1:19092
      KAFKA_CLUSTERS_0_METRICS_PORT: 9001
      KAFKA_CLUSTERS_0_SCHEMAREGISTRY: http://kafka-schema-registry:8081
      DYNAMIC_CONFIG_ENABLED: 'true'
  
  
  ksqldb-server:
    image: confluentinc/cp-ksqldb-server:7.3.2
    hostname: ksqldb-server
    container_name: ksqldb-server
    ports:
      - "8088:8088"
    environment:
      KSQL_BOOTSTRAP_SERVERS: PLAINTEXT://kafka1:19092
      KSQL_LISTENERS: http://0.0.0.0:8088/
      KSQL_KSQL_SERVICE_ID: ksqldb-server_
    depends_on:
      - zoo1
      - kafka1
volumes:
  db-data:
    driver: local
  tb-data:
    driver: local
  tb-logs:
    driver: local        
  thingsboard:
    driver: local
